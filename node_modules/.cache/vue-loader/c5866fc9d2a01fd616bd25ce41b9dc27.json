{"remainingRequest":"D:\\jiao\\uni-app\\management1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jiao\\uni-app\\management1\\src\\views\\user\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jiao\\uni-app\\management1\\src\\views\\user\\User.vue","mtime":1604373082717},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603939427007},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\babel-loader\\lib\\index.js","mtime":1603939453085},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603939427007},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\vue-loader\\lib\\index.js","mtime":1603939447929}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"User\",\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      total: 1,\r\n      pagenum: 1,\r\n      pagesize: 2,\r\n\r\n\t  userlist: [],\r\n\t  //   是否显示对话框\r\n\tdialogFormVisibleadd:false,\r\n\tdialogFormVisibleedit:false,\r\n\tdialogFormVisibleRol:false,\r\n\t// 添加用户表单数据\r\n\t  form:{\r\n\t\t//   这里面的数据要结合接口文档看\r\n\t\t// | username | 用户名称 | 不能为空 |\r\n\t\t// | password | 用户密码 | 不能为空 |\r\n\t\t// | email    | 邮箱     | 可以为空 |\r\n\t\t// | mobile   | 手机号   | 可以为空 |\r\n\t\tusername:'',\r\n\t\tpassword:'',\r\n\t\temail:'',\r\n\t\tmobile:''\r\n\t  },\r\n\t  currRoleId:0,\r\n\t  name:'',\r\n\t  curruserId:-1,\r\n\t  roles:[]\r\n\t\r\n    }; \r\n  },\r\n  components: {},\r\n  created() {\r\n    this.getuserinfo();\r\n  },\r\n  methods: {\r\n    async getuserinfo() {\r\n      // 2.虽然按照接口文档将参数传递过去了,但还是获取不到数据,需要授权的API,必须在请求头中使用Authorization 字段提供token 令牌\r\n      // 获取token值\r\n      const AUTH_TOKEN = localStorage.getItem(\"token\");\r\n      // 设置请求头\r\n      this.$http.defaults.headers.common[\"Authorization\"] = AUTH_TOKEN;\r\n\r\n      // 1.请求列表的数据\r\n      const res = await this.$http.get(\r\n        `users?query=${this.search}&pagenum=${this.pagenum}&pagesize=${this.pagesize}`\r\n      ); //有参数要传递参数\r\n    //   console.log(res);\r\n      // 拿到数据后将要用到的数据结构出来\r\n      const {\r\n        data: { total, users },\r\n        meta: { msg, status },\r\n      } = res.data;\r\n      if (status === 200) {\r\n        // 1.给表格数据赋值\r\n        this.userlist = users;\r\n        // 2.给total赋值\r\n        this.total = total;\r\n        // 3.提示\r\n        this.$message.success(msg);\r\n      } else {\r\n        this.$message.warning(msg);\r\n      }\r\n\t},\r\n\t// 分页的相关事件\r\n\thandleSizeChange(val) {\r\n\t\tconsole.log(`每页 ${val} 条`);\r\n\t\tthis.pagesize = val\r\n\t\t// 更新视图\r\n\t\tthis.getuserinfo()\r\n      },\r\n      handleCurrentChange(val) {\r\n\t\tconsole.log(`当前页: ${val}`);\r\n\t\tthis.pagenum = val\r\n\t\tthis.getuserinfo()\r\n\t\t\r\n\t  },\r\n\t//  搜索事件\r\n\tsearchclick(){\r\n\t\t// 重新发送请求\r\n\t\tthis.getuserinfo()\t\t\r\n\t},\r\n\t// 点击x清空搜索中数据,并重新获取数据展示\r\n\tloaduserlist(){\r\n\t\tthis.getuserinfo()\t\t\r\n\t},\r\n\t// 添加用户-显示弹出\r\n\tshowaddformvisible(){\r\n\t\tthis.form = {}   \r\n\t\tthis.dialogFormVisibleadd=true\r\n\t},\r\n\t//  添加用户-发送请求\r\n\tasync adduser(){\r\n\t\t// 2 关闭对话框\r\n\t\tthis.dialogFormVisibleadd=false\r\n\t\t// 发送请求\r\n\t\tconst res = await this.$http.post(`users`,this.form);\r\n\t\t// console.log(res)\r\n\t\t// 将要用的数据结构出来\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===201){\r\n\t\t\t// 1 弹窗提示\r\n\t\t\tthis.$message.success(msg)\r\n\t\t\t// 3 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t\t// 4 清空文本框\r\n\t\t\tthis.form={}\r\n\t\t}else{\r\n\t\t\tthis.$message.warning(msg)\r\n\r\n\t\t}\r\n\t},\r\n\t// 删除-弹出提示框\r\n\tdeletelist(id){\r\n\t\tthis.$confirm('是否删除用户?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n\t\t\t// 发送删除的请求 :记得将id传过去\r\n\t\tconst res = await this.$http.delete(`users/${id}`)\r\n\t\tconsole.log(res)\r\n\t\tif(res.data.meta.status===200){\r\n\t\t\t// 回到第一页\r\n\t\t\tthis.pagenum =1\r\n\t\t\t// 1 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t\t// 2 提示\r\n\t\tthis.$message({\r\n            type: 'success',\r\n            message: res.data.meta.msg\r\n          });\r\n\t\t}        \r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });          \r\n        });\r\n\t},\r\n\t\r\n\t// 点击修改用户个人信息\r\n\tuseredit(user){\r\n\t\t// 提示框弹出\r\n\t\tthis.dialogFormVisibleedit=true\r\n\t\t// 将user赋值给之前的form \r\n\t\tthis.form = user\r\n\t\tconsole.log(this.form)\r\n\t},\r\n  \r\n\t// 点击修改确认的按钮\r\n\tasync edituser(){\r\n\t\t// 关闭对话框\r\n\t\tthis.dialogFormVisibleedit=false\r\n\t\t// 发送修改请求\r\n\t\tconst res = await this.$http.put(`users/${this.form.id}`,this.form)\r\n\t\tconsole.log(res)\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===200){\r\n\t\t\t// 1 弹出提示\r\n\t\tthis.$message.success(msg)\r\n\t\t\t// 3 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t}else{\r\n\t\tthis.$message.warning(msg)\t\t\t\r\n\t\t}\r\n\t},\r\n\t// 点击修改状态\r\n\tasync changeMgState(user){\r\n\t\t// users/:uId/state/:type\r\n\t\t// 发送请求\r\n\t\tconsole.log(user)\r\n\t\tconst res = await this.$http.put(`users/${user.id}/state/${user.mg_state}`)\r\n\t},\r\n\t// 点击分配按钮-弹出对话框\r\n\tasync fenpei(user){\r\n\t\t// 给name赋值\r\n\t\tthis.name = user.username\r\n\t\tthis.curruserId = user.id\r\n\t\t// 获取当前用户的角色id ->rid\r\n\t\tconst res = await  this.$http.get(`users/${user.id}`)\r\n\t// 获取所有角色\r\n\tconst res1 = await this.$http.get(`roles`)\r\n\t// 保存角色数据\r\n\tthis.roles = res1.data.data\r\n\t\r\n\tthis.currRoleId =res.data.data.rid\r\n\tthis.dialogFormVisibleRol=true\r\n\t// console.log(res)\r\n\t},\r\n\t// 点击分配确认的按钮\r\n\tasync fenpeiuser(){\r\n\t\t// 关闭对话框\r\n\t\tthis.dialogFormVisibleRol=false\r\n\t\t// 发送请求 请求体中rid 修改的新值角色id\r\n\t\tconst res = await this.$http.put(`users/${this.curruserId}/role`,{rid:this.currRoleId})\r\n\t\tconsole.log(res)\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===200){\r\n\t\t\t// 1 弹窗提示\r\n\t\t\tthis.$message.success(msg)\r\n\t\t\t// 3 这里不需要更新更新视图\r\n\t\t\t// this.getuserinfo()\r\n\t\t}else{\r\n\t\t\tthis.$message.warning(msg)\r\n\t\t}\r\n\t}\r\n  },\r\n};\r\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"User.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <!-- 面包屑 -->\r\n    <!-- 首页用户管理用户列表 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item>首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 搜索框 -->\r\n    <el-row class=\"row\">\r\n      <el-col>\r\n        <el-input placeholder=\"请输入内容\" v-model=\"search\" class=\"input\" clearable @clear=\"loaduserlist\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"searchclick\"></el-button>\r\n        </el-input>\r\n        <el-button type=\"primary\" class=\"btn\" @click=\"showaddformvisible\">添加用户</el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 表格 -->\r\n    <el-table :data=\"userlist\" stripe style=\"width: 100%\">\r\n      <el-table-column type=\"index\" label=\"#\" width=\"50\"> </el-table-column>\r\n      <el-table-column prop=\"username\" label=\"姓名\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\"> </el-table-column>\r\n      <el-table-column prop=\"mobile\" label=\"电话\"> </el-table-column>\r\n      <el-table-column label=\"时间\">\r\n        <!-- 关于时间格式化的用法   prop=\"create_time |fmtiem\"  不行 -->\r\n        <!-- 1 如果单元格的内容不是文本 需要给该内容外层加容器 template 才会显示 -->\r\n        <!-- 2 作用域拿值问题  一个组件如何想拿另一个组件里面的值则使用: slot-scope=\"scope\" \r\n\t   \t\t这里的scope就是数据源  要拿数据源里面的值 scope.row.具体数据源里面的值-->'\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.create_time | fmtiem }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"role_name\" label=\"角色\"> </el-table-column>\r\n      <el-table-column prop=\"mg_state\" label=\"状态\">\r\n\t\t<template slot-scope=\"scope\">  \r\n       \t\t<el-switch \r\n\t\t\t   @change=\"changeMgState(scope.row)\"\r\n       \t\t  v-model=\"scope.row.mg_state\"\r\n       \t\t  active-color=\"#13ce66\"\r\n       \t\t  inactive-color=\"#ff4949\"\r\n       \t\t>\r\n       \t\t</el-switch>\r\n\t\t</template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" width=\"130\">\r\n\t\t<template slot-scope=\"scope\">  \r\n  \t\t\t<el-button size=\"mini\" plain type=\"primary\" icon=\"el-icon-edit\" circle @click=\"useredit(scope.row)\"></el-button>\r\n  \t\t\t<el-button size=\"mini\" plain type=\"success\" icon=\"el-icon-delete\" circle @click=\"deletelist(scope.row.id)\"></el-button>\r\n  \t\t\t<el-button size=\"mini\" plain type=\"danger\" icon=\"el-icon-s-tools\" circle @click=\"fenpei(scope.row)\"></el-button>\r\n\t\t</template>  \r\n\t  </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n \t<el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"pagenum\"\r\n      :page-sizes=\"[1, 2, 3, 4]\"\r\n      :page-size=\"4\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\">\r\n    </el-pagination>\r\n\r\n<!-- 点击添加用户弹出对话框 -->\r\n<el-dialog title=\"添加用户\" :visible.sync=\"dialogFormVisibleadd\">\r\n  <el-form :model=\"form\">\r\n    <el-form-item label=\"用户名\" label-width=\"100px\">\r\n      <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n\t<el-form-item label=\"密码\" label-width=\"100px\">\r\n      <el-input v-model=\"form.password\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n\t<el-form-item label=\"邮箱\" label-width=\"100px\">\r\n      <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n\t<el-form-item label=\"手机\" label-width=\"100px\">\r\n      <el-input v-model=\"form.mobile\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n  </el-form>\r\n  <div slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"dialogFormVisibleadd = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"adduser()\">确 定</el-button>\r\n  </div>\r\n</el-dialog>\r\n\r\n<!-- 点击修改用户弹出对话框 -->\r\n<el-dialog title=\"修改用户信息\" :visible.sync=\"dialogFormVisibleedit\">\r\n  <el-form :model=\"form\">\r\n    <el-form-item label=\"用户名\" label-width=\"100px\">\r\n      <el-input disabled v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n\t<el-form-item label=\"邮箱\" label-width=\"100px\">\r\n      <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n\t<el-form-item label=\"手机\" label-width=\"100px\">\r\n      <el-input v-model=\"form.mobile\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n  </el-form>\r\n  <div slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"dialogFormVisibleedit = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"edituser()\">确 定</el-button>\r\n  </div>\r\n</el-dialog>\r\n\r\n<!-- 点击分配按钮弹出对话框 -->\r\n<el-dialog title=\"分配角色\" :visible.sync=\"dialogFormVisibleRol\">\r\n  <el-form :model=\"form\">\r\n    <el-form-item label=\"当前用户\" label-width=\"100px\">\r\n      {{name}}\r\n    </el-form-item>\r\n    <el-form-item label=\"角色\" label-width=\"100px\">\r\n      <el-select v-model=\"currRoleId\">\r\n        <el-option label=\"请选择\" :value=\"-1\"></el-option>\r\n        <el-option :label=\"item.roleName\" :value=\"item.id\"\r\n\t\tv-for=\"(item,i) in roles\" :key=\"i\"\r\n\t\t>\r\n\t\t</el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n  </el-form>\r\n  <div slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"fenpeiuser()\">确 定</el-button>\r\n  </div>\r\n</el-dialog>\r\n\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"User\",\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      total: 1,\r\n      pagenum: 1,\r\n      pagesize: 2,\r\n\r\n\t  userlist: [],\r\n\t  //   是否显示对话框\r\n\tdialogFormVisibleadd:false,\r\n\tdialogFormVisibleedit:false,\r\n\tdialogFormVisibleRol:false,\r\n\t// 添加用户表单数据\r\n\t  form:{\r\n\t\t//   这里面的数据要结合接口文档看\r\n\t\t// | username | 用户名称 | 不能为空 |\r\n\t\t// | password | 用户密码 | 不能为空 |\r\n\t\t// | email    | 邮箱     | 可以为空 |\r\n\t\t// | mobile   | 手机号   | 可以为空 |\r\n\t\tusername:'',\r\n\t\tpassword:'',\r\n\t\temail:'',\r\n\t\tmobile:''\r\n\t  },\r\n\t  currRoleId:0,\r\n\t  name:'',\r\n\t  curruserId:-1,\r\n\t  roles:[]\r\n\t\r\n    }; \r\n  },\r\n  components: {},\r\n  created() {\r\n    this.getuserinfo();\r\n  },\r\n  methods: {\r\n    async getuserinfo() {\r\n      // 2.虽然按照接口文档将参数传递过去了,但还是获取不到数据,需要授权的API,必须在请求头中使用Authorization 字段提供token 令牌\r\n      // 获取token值\r\n      const AUTH_TOKEN = localStorage.getItem(\"token\");\r\n      // 设置请求头\r\n      this.$http.defaults.headers.common[\"Authorization\"] = AUTH_TOKEN;\r\n\r\n      // 1.请求列表的数据\r\n      const res = await this.$http.get(\r\n        `users?query=${this.search}&pagenum=${this.pagenum}&pagesize=${this.pagesize}`\r\n      ); //有参数要传递参数\r\n    //   console.log(res);\r\n      // 拿到数据后将要用到的数据结构出来\r\n      const {\r\n        data: { total, users },\r\n        meta: { msg, status },\r\n      } = res.data;\r\n      if (status === 200) {\r\n        // 1.给表格数据赋值\r\n        this.userlist = users;\r\n        // 2.给total赋值\r\n        this.total = total;\r\n        // 3.提示\r\n        this.$message.success(msg);\r\n      } else {\r\n        this.$message.warning(msg);\r\n      }\r\n\t},\r\n\t// 分页的相关事件\r\n\thandleSizeChange(val) {\r\n\t\tconsole.log(`每页 ${val} 条`);\r\n\t\tthis.pagesize = val\r\n\t\t// 更新视图\r\n\t\tthis.getuserinfo()\r\n      },\r\n      handleCurrentChange(val) {\r\n\t\tconsole.log(`当前页: ${val}`);\r\n\t\tthis.pagenum = val\r\n\t\tthis.getuserinfo()\r\n\t\t\r\n\t  },\r\n\t//  搜索事件\r\n\tsearchclick(){\r\n\t\t// 重新发送请求\r\n\t\tthis.getuserinfo()\t\t\r\n\t},\r\n\t// 点击x清空搜索中数据,并重新获取数据展示\r\n\tloaduserlist(){\r\n\t\tthis.getuserinfo()\t\t\r\n\t},\r\n\t// 添加用户-显示弹出\r\n\tshowaddformvisible(){\r\n\t\tthis.form = {}   \r\n\t\tthis.dialogFormVisibleadd=true\r\n\t},\r\n\t//  添加用户-发送请求\r\n\tasync adduser(){\r\n\t\t// 2 关闭对话框\r\n\t\tthis.dialogFormVisibleadd=false\r\n\t\t// 发送请求\r\n\t\tconst res = await this.$http.post(`users`,this.form);\r\n\t\t// console.log(res)\r\n\t\t// 将要用的数据结构出来\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===201){\r\n\t\t\t// 1 弹窗提示\r\n\t\t\tthis.$message.success(msg)\r\n\t\t\t// 3 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t\t// 4 清空文本框\r\n\t\t\tthis.form={}\r\n\t\t}else{\r\n\t\t\tthis.$message.warning(msg)\r\n\r\n\t\t}\r\n\t},\r\n\t// 删除-弹出提示框\r\n\tdeletelist(id){\r\n\t\tthis.$confirm('是否删除用户?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n\t\t\t// 发送删除的请求 :记得将id传过去\r\n\t\tconst res = await this.$http.delete(`users/${id}`)\r\n\t\tconsole.log(res)\r\n\t\tif(res.data.meta.status===200){\r\n\t\t\t// 回到第一页\r\n\t\t\tthis.pagenum =1\r\n\t\t\t// 1 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t\t// 2 提示\r\n\t\tthis.$message({\r\n            type: 'success',\r\n            message: res.data.meta.msg\r\n          });\r\n\t\t}        \r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });          \r\n        });\r\n\t},\r\n\t\r\n\t// 点击修改用户个人信息\r\n\tuseredit(user){\r\n\t\t// 提示框弹出\r\n\t\tthis.dialogFormVisibleedit=true\r\n\t\t// 将user赋值给之前的form \r\n\t\tthis.form = user\r\n\t\tconsole.log(this.form)\r\n\t},\r\n  \r\n\t// 点击修改确认的按钮\r\n\tasync edituser(){\r\n\t\t// 关闭对话框\r\n\t\tthis.dialogFormVisibleedit=false\r\n\t\t// 发送修改请求\r\n\t\tconst res = await this.$http.put(`users/${this.form.id}`,this.form)\r\n\t\tconsole.log(res)\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===200){\r\n\t\t\t// 1 弹出提示\r\n\t\tthis.$message.success(msg)\r\n\t\t\t// 3 更新视图\r\n\t\t\tthis.getuserinfo()\r\n\t\t}else{\r\n\t\tthis.$message.warning(msg)\t\t\t\r\n\t\t}\r\n\t},\r\n\t// 点击修改状态\r\n\tasync changeMgState(user){\r\n\t\t// users/:uId/state/:type\r\n\t\t// 发送请求\r\n\t\tconsole.log(user)\r\n\t\tconst res = await this.$http.put(`users/${user.id}/state/${user.mg_state}`)\r\n\t},\r\n\t// 点击分配按钮-弹出对话框\r\n\tasync fenpei(user){\r\n\t\t// 给name赋值\r\n\t\tthis.name = user.username\r\n\t\tthis.curruserId = user.id\r\n\t\t// 获取当前用户的角色id ->rid\r\n\t\tconst res = await  this.$http.get(`users/${user.id}`)\r\n\t// 获取所有角色\r\n\tconst res1 = await this.$http.get(`roles`)\r\n\t// 保存角色数据\r\n\tthis.roles = res1.data.data\r\n\t\r\n\tthis.currRoleId =res.data.data.rid\r\n\tthis.dialogFormVisibleRol=true\r\n\t// console.log(res)\r\n\t},\r\n\t// 点击分配确认的按钮\r\n\tasync fenpeiuser(){\r\n\t\t// 关闭对话框\r\n\t\tthis.dialogFormVisibleRol=false\r\n\t\t// 发送请求 请求体中rid 修改的新值角色id\r\n\t\tconst res = await this.$http.put(`users/${this.curruserId}/role`,{rid:this.currRoleId})\r\n\t\tconsole.log(res)\r\n\t\tconst {data,meta:{msg,status}} = res.data\r\n\t\tif(status===200){\r\n\t\t\t// 1 弹窗提示\r\n\t\t\tthis.$message.success(msg)\r\n\t\t\t// 3 这里不需要更新更新视图\r\n\t\t\t// this.getuserinfo()\r\n\t\t}else{\r\n\t\t\tthis.$message.warning(msg)\r\n\t\t}\r\n\t}\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  height: 100%;\r\n}\r\n.input {\r\n  width: 300px;\r\n}\r\n.btn {\r\n  margin-left: 15px;\r\n}\r\n.row {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"]}]}
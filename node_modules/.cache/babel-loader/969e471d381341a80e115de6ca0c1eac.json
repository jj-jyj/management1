{"remainingRequest":"D:\\jiao\\uni-app\\management1\\node_modules\\babel-loader\\lib\\index.js!D:\\jiao\\uni-app\\management1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jiao\\uni-app\\management1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jiao\\uni-app\\management1\\src\\views\\login\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jiao\\uni-app\\management1\\src\\views\\login\\Login.vue","mtime":1604033824427},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603939427007},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\babel-loader\\lib\\index.js","mtime":1603939453085},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603939427007},{"path":"D:\\jiao\\uni-app\\management1\\node_modules\\vue-loader\\lib\\index.js","mtime":1603939447929}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\jiao\\\\uni-app\\\\management1\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Login',\n  components: {},\n  data: function data() {\n    return {\n      labelPosition: 'top',\n      formdata: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    btnclick: function () {\n      var _btnclick = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, _res$data, data, _res$data$meta, msg, status;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.post('login', this.formdata);\n\n              case 2:\n                res = _context.sent;\n                console.log(res); // 现将需要用的东西通过结构提取出来,也可以自己在打塔里面命名保存\n\n                _res$data = res.data, data = _res$data.data, _res$data$meta = _res$data.meta, msg = _res$data$meta.msg, status = _res$data$meta.status;\n\n                if (status === 200) {\n                  // 登录成功\n                  // 0.保存token值\n                  localStorage.setItem('token', data.token); // 1.跳转首页\n\n                  this.$router.push('home'); //路由跳转\t\n                  // 2.弹窗提示成功\n\n                  this.$message.success(msg);\n                } else {\n                  // 不成功\n                  // 1.提示原因\n                  this.$message.warning(msg);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function btnclick() {\n        return _btnclick.apply(this, arguments);\n      }\n\n      return btnclick;\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,QAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAHA,CAIA;;AAJA,4BAQA,GAAA,CAAA,IARA,EAMA,IANA,aAMA,IANA,6BAOA,IAPA,EAOA,GAPA,kBAOA,GAPA,EAOA,MAPA,kBAOA,MAPA;;AASA,oBAAA,MAAA,KAAA,GAAA,EAAA;AACA;AACA;AACA,kBAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,KAAA,EAHA,CAIA;;AACA,uBAAA,OAAA,CAAA,IAAA,CAAA,MAAA,EALA,CAKA;AACA;;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,GAAA;AACA,iBARA,MAQA;AACA;AACA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,GAAA;AAEA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAZA,CAAA","sourcesContent":["<template>\r\n  <div id=\"Login\">\t\t  \r\n\t\t<el-form class=\"login-prow\" :label-position=\"labelPosition\" label-width=\"80px\" :model=\"formdata\">\r\n\t\t  <h2>用户登录</h2>\r\n\t\t  <el-form-item label=\"用户名\">\r\n\t\t    <el-input v-model=\"formdata.username\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"密码\">\r\n\t\t    <el-input v-model=\"formdata.password\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-button type=\"primary\" class=\"denglu\" @click.prevent=\"btnclick()\">登录</el-button>\r\n\t\t</el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: {},\r\n  data(){\r\n\t  return{\r\n\t\t  labelPosition:'top',\r\n\t\t  formdata:{\r\n\t\t\t  username:'',\r\n\t\t\t  password:''\r\n\t\t  }\r\n\t  }\r\n  },\r\n  methods:{\r\n\t async\tbtnclick(){\r\n\t\tconst res =await this.$http.post('login',this.formdata)\r\n\t\t\tconsole.log(res)\r\n\t\t\t// 现将需要用的东西通过结构提取出来,也可以自己在打塔里面命名保存\r\n\t\t\tconst {\r\n\t\t\t\tdata,\r\n\t\t\t\tmeta:{msg,status}\r\n\t\t\t} = res.data\t\t\t\t\t\r\n\t\tif(status===200){\r\n\t\t\t// 登录成功\r\n\t\t\t// 0.保存token值\r\n\t\t\tlocalStorage.setItem('token',data.token)\r\n\t\t\t// 1.跳转首页\r\n\t\t\tthis.$router.push('home')  //路由跳转\t\r\n\t\t\t// 2.弹窗提示成功\r\n\t\t\tthis.$message.success(msg)\r\n\t\t}else{\r\n\t\t\t// 不成功\r\n\t\t\t// 1.提示原因\r\n\t\t\tthis.$message.warning(msg)\r\n\r\n\t\t}\r\n\t  }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#Login{\r\n\theight: 100%;\r\n\tbackground-color: #314155;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t.login-prow{\r\n\t\twidth: 400px;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 30px;\r\n\t\tbackground-color: #fff;\r\n\t\t.denglu{\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/views/login"}]}